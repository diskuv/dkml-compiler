diff --git a/asmcomp/amd64/emit.mlp b/asmcomp/amd64/emit.mlp
index 3c58633..f69d42e 100644
--- a/asmcomp/amd64/emit.mlp
+++ b/asmcomp/amd64/emit.mlp
@@ -922,7 +922,7 @@ let data l =
 
 let begin_assembly() =
   X86_proc.reset_asm_code ();
-  reset_debug_info();                   (* PR#5603 *)
+  reset_debug_info_at_file_num 2;       (* A09. PR#5603 *)
   reset_imp_table();
   float_constants := [];
   all_functions := [];
diff --git a/asmcomp/emitaux.ml b/asmcomp/emitaux.ml
index d3587c1..0dca6a9 100644
--- a/asmcomp/emitaux.ml
+++ b/asmcomp/emitaux.ml
@@ -341,6 +341,10 @@ let reset_debug_info () =
   file_pos_nums := [];
   file_pos_num_cnt := 1
 
+let reset_debug_info_at_file_num file_num =
+  file_pos_nums := [];
+  file_pos_num_cnt := file_num
+
 (* We only display .file if the file has not been seen before. We
    display .loc for every instruction. *)
 let emit_debug_info_gen dbg file_emitter loc_emitter =
diff --git a/asmcomp/emitaux.mli b/asmcomp/emitaux.mli
index df0b019..34d1ac1 100644
--- a/asmcomp/emitaux.mli
+++ b/asmcomp/emitaux.mli
@@ -32,6 +32,7 @@ val emit_float32_directive: string -> int32 -> unit
 
 val reset : unit -> unit
 val reset_debug_info: unit -> unit
+val reset_debug_info_at_file_num: int -> unit
 val emit_debug_info: Debuginfo.t -> unit
 val emit_debug_info_gen :
   Debuginfo.t ->
diff --git a/asmcomp/i386/emit.mlp b/asmcomp/i386/emit.mlp
index b76af36..69489a2 100644
--- a/asmcomp/i386/emit.mlp
+++ b/asmcomp/i386/emit.mlp
@@ -948,7 +948,7 @@ let data l =
 
 let begin_assembly() =
   X86_proc.reset_asm_code ();
-  reset_debug_info();                   (* PR#5603 *)
+  reset_debug_info_at_file_num 2;       (* A09. PR#5603 *)
   float_constants := [];
   if system = S_win32 then begin
     D.mode386 ();
diff --git a/asmcomp/x86_gas.ml b/asmcomp/x86_gas.ml
index 6d2363a..9548e91 100644
--- a/asmcomp/x86_gas.ml
+++ b/asmcomp/x86_gas.ml
@@ -300,7 +300,7 @@ let print_line b = function
 
 let generate_asm oc lines =
   let b = Buffer.create 10000 in
-  output_string oc "\t.file \"\"\n"; (* PR#7037 *)
+  output_string oc "\t.file 1 \"\"\n"; (* A09. PR#7037 *)
   List.iter
     (fun i ->
        Buffer.clear b;
